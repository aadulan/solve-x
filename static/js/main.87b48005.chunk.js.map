{"version":3,"sources":["serviceWorker.js","inital-data.js","Styles.js","EqCard.jsx","DisplayExpression.js","EqSpace.jsx","Equal.jsx","EqDisplay.js","index.js","App.js"],"names":["Boolean","window","location","hostname","match","equationGen","randomNumber","Math","ceil","random","square","randomInput","input","useStyles","makeStyles","card","border","borderStyle","padding","margin","minwidth","userSelect","eqSpaceCard","maxWidth","borderWidth","backgroundColor","drop","display","flexDirection","equal","borderRadius","width","height","fontFamily","EqCard","props","classes","draggableId","task","id","index","isDragDisabled","provided","snapshot","Card","className","draggableProps","dragHandleProps","innerRef","CardContent","Typography","color","align","variant","math","content","displayExpression","expression","side","isShowSign","isUnpack","isHelper","tasks","terms","forEach","t","isStart","isPositive","coefficients","coeff","numer","unpack","variables","variable","contentHelper","content_NonHelper","helper","push","exp","constants","c","hasTerm","length","EquationSpace","useState","dragDisabled","setDragDisabled","useEffect","droppableId","dropId","direction","Grid","container","item","justify","alignItems","droppableProps","showSigns","unpackEq","map","key","placeholder","Equal","style","EqDisplay","algebra","parse","equation","setEquation","setHelper","signs","setSigns","setUnpack","canCombine","console","log","hasOneConstant","combineEquation","lhs","rhs","simplify","newExp","Equation","FormGroup","FormControlLabel","control","Switch","checked","onChange","event","target","value","label","disabled","onDragEnd","result","document","body","destination","source","newLhsCards","newRhsCards","movedTask","lhsOrigin","rhsOrigin","newLhs","subtract","newRhs","xs","Button","onClick","ReactDOM","render","basename","pathname","exact","path","component","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.87b48005.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initalData = {\n    equation : '2 * x - 5 = 5',\n    // tasks: [\n    //     { id: 'task-2', content: '2 * x' },\n    //     { id: 'task-4', content: '- 5' },\n    //     { id: 'task-5', content: '=' },\n    //     { id: 'task-6', content: '5' },\n    // ],\n};\n\nexport default initalData;\n\nexport const equationGen = () => {\n    const randomNumber = Math.ceil(Math.random() * 10) \n    const square = randomNumber * randomNumber\n    const randomInput = Math.ceil(Math.random() * 10)\n    const input = square - randomInput\n\n    return `${randomNumber} * x -${input} = ${randomInput}`\n\n}\n\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles({\n    card: {\n        border: 1, \n        borderStyle: 'solid', \n        padding: 10, \n        margin: 10, \n        minwidth: 200,\n    },\n    userSelect: {\n        userSelect:'none'\n    },\n    eqSpaceCard: {\n        padding: 20, \n        maxWidth: 1000, \n        borderStyle: 'solid', \n        borderWidth: 1, \n        backgroundColor: '#e3f2fd',\n    },\n    drop: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    equal: {\n        borderRadius: '50em',\n        margin: '0.25em',\n        width: 100, \n        height: 100,\n        fontFamily: '\"Fira Code\"',\n        display: 'flex',\n        userSelect:'none'\n    }\n\n})","import React from 'react'\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent'\nimport { Typography } from '@material-ui/core';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { useStyles } from './Styles'\nimport 'katex/dist/katex.min.css';\nimport TeX from '@matejmazur/react-katex';\n\n// props.isDragging ? 'lightgreen : 'white'\n\n//isDragDisabled to allow to conditionally move items \n\nexport default function EqCard(props) {\n    const classes = useStyles();\n\n    return (\n        <Draggable\n            draggableId={props.task.id}\n            index={props.index}\n            isDragDisabled={props.isDragDisabled}\n        >\n            {(provided, snapshot) => (\n\n\n                <Card\n                    className={classes.card}\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    innerRef={provided.innerRef}\n                    // isDragging={snapshot.isDragging}\n                >\n                    <CardContent>\n                        <Typography \n                            className={classes.userSelect} \n                            color='primary' \n                            align='center' \n                            variant='h2'>\n                                <TeX math={`${props.task.content}`}/>\n                        </Typography>\n\n                    </CardContent>\n                </Card>\n\n            )}\n\n        </Draggable>\n\n    )\n}","export const displayExpression = (expression, side, isShowSign, isUnpack, isHelper) => {\n    var tasks = []\n    expression.terms.forEach((t,index) => {\n        var isStart  = index === 0\n        var isPositive = t.coefficients[0] > 0\n        // var helper = isHelper ? coeff + t.variables[0].variable : coeff+ t.variables[0].variable :\n        \n        // checkss if coefficient is equal to one\n        var isOne = t.coefficients[0].numer === 1\n        // if coefficient is equal to one then don't show it in helper mode \n        var coeff = isOne ? \"\" : t.coefficients[0].numer\n       \n        // if unpack then add the \\times to the equation so they can see constant being times\n        var unpack = isUnpack ?  t.coefficients[0].numer + \"\\\\times \"   +  t.variables[0].variable : t.coefficients[0].numer +  t.variables[0].variable\n\n        // if show sign add the signs \n        var contentHelper = isShowSign &&  isPositive ? \"+\" + unpack : unpack \n\n        // if no helper mode then just add signs to second \n        var content_NonHelper = !isStart && isPositive ? \"+\" +  coeff + t.variables[0].variable : coeff+ t.variables[0].variable\n\n        // sets what the content looks like \n        var helper = isHelper ? contentHelper : content_NonHelper\n\n        tasks.push({\n            id: `${side}-variable-x${index}`, \n            // content:!isStart && isPositive ? \"+\" +  t.coefficients[0].numer + t.variables[0].variable : t.coefficients[0].numer + t.variables[0].variable,\n            // content:!isStart && isPositive ? \"+\" +  coeff + t.variables[0].variable : coeff+ t.variables[0].variable,  \n            content: helper,\n            exp: t \n        });  \n    }); \n\n        expression.constants.forEach((c,index) => {\n            var hasTerm = tasks.length !== 0  && index === 0\n            var isStart  = index === 0\n            var isPositive = c.numer > 0\n            // if helper mode add signs to everything \n            var contentHelper = isPositive ? \"+\" + c.numer : c.numer\n\n            // if not helper  then only show it at certain times \n            var content_NonHelper = isPositive && (!isStart || hasTerm) ? \"+\" + c.numer : c.numer\n\n            // set content of what it should look like \n            var helper = isShowSign && isHelper ? contentHelper : content_NonHelper\n            tasks.push({\n                id: `${side}-num-${index}`, \n                // content: (!isStart && isPositive) || (isStart && hasTerm && isPositive) ? \"+\" + c.numer : c.numer,\n                // content: isPositive && (!isStart || hasTerm) ? \"+\" + c.numer : c.numer,  \n                content: helper,\n                exp: c\n            });         \n\n        }); \n        return tasks;\n        \n    }","import React, { useState, useEffect } from 'react';\nimport Card from '@material-ui/core/Card';\nimport { Grid } from '@material-ui/core';\nimport EqCard from './EqCard'\nimport { Droppable } from 'react-beautiful-dnd';\nimport { displayExpression } from './DisplayExpression'\nimport { useStyles } from './Styles'\n//list of components transition : background colour 0.2 sease\n// props.isDragging ? 'lightgreen : 'white'\n\nexport default function EquationSpace(props) {\n\n    const [dragDisabled, setDragDisabled] = useState(false)\n\n    const classes = useStyles();\n\n    useEffect(() => {\n        setDragDisabled(displayExpression(props.expression, props.side).length === 1)\n    }, [props.expression, props.side])\n\n    return (\n        <Card \n        className={classes.eqSpaceCard}\n        >\n            <Droppable\n                droppableId={props.dropId}\n                direction=\"horizontal\"\n\n            >\n                {(provided, snapshot) => (\n                    <Grid\n                        className={classes.drop}\n                        direction=\"row\"\n                        container\n                        item\n                        justify=\"center\"\n                        alignItems=\"center\"\n                        innerRef={provided.innerRef}\n                        {...provided.droppableProps}\n                        // isDraggingOver={snapshot.isDraggingOver}\n                    >\n                        {displayExpression(props.expression, props.side, props.showSigns, props.unpackEq, props.helper).map((task, index) => (\n                            <EqCard \n                                key={task.id} \n                                task={task} \n                                index={index} \n                                {...props} \n                                isDragDisabled={dragDisabled} \n                            />\n                        ))}\n                        {provided.placeholder}\n                    </Grid>\n                )}\n\n            </Droppable>\n        </Card>\n\n    )\n\n}\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { useStyles } from './Styles'\n// import Card from '@material-ui/core/Card';\nimport 'katex/dist/katex.min.css';\nimport TeX from '@matejmazur/react-katex';\n\nexport default function Equal(props){\n    \n    const classes = useStyles();\n\n    return(\n        <Typography className={classes.equal} variant='h1'>\n            {/* <Card className={classes.equal}> */}\n                <span style={{ margin: 'auto' }}>\n                    <TeX math=\"=\"/>\n                </span>\n            {/* </Card> */}\n        </Typography>\n\n    )\n}","import React, { useState } from \"react\";\nimport \"./index.css\";\nimport { equationGen } from \"./inital-data\";\nimport EquationSpace from \"./EqSpace\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport Grid from \"@material-ui/core/Grid\";\nimport algebra from \"algebra.js\";\nimport { displayExpression } from \"./DisplayExpression\";\nimport Equal from \"./Equal\";\nimport { Button } from \"@material-ui/core\";\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport FormGroup from '@material-ui/core/FormGroup';\n\n\n\nexport default function EqDisplay(props) {\n  const [equation, setEquation] = useState(algebra.parse(equationGen()));\n  const [helper, setHelper] = useState(false);\n  const [signs, setSigns] = useState(false);\n  const [unpack, setUnpack] = useState(false);\n\n  // onDragStart = () => {\n  //     document.body.style.color = 'blue';\n  //     document.body.style.transition = 'background-color 0.2s ease'\n  // }\n\n  // onDragUpdate = update => {\n  //     const { destination } = update;\n  //     const opacity = destination ? destination.index / Object.keys(this.state.tasks).length : 0 ;\n  //     document.body.style.backgroundColor = `rgba(153, 141, 217, ${opacity})`;\n  // }\n\n  const canCombine = equation => {\n    console.log(equation)\n    var hasOneTerm = null;\n    var hasOneConstant = null;\n    if(equation.constants.length === 1){\n      hasOneConstant = true;\n    } else {\n      hasOneConstant = false;\n    }\n    if (equation.terms.length === 1){\n      hasOneTerm = true;\n    }else {\n      hasOneTerm = false;\n    }\n\n    return hasOneTerm || hasOneConstant\n  }\n\n  const handleSignChange = () => event => {\n    console.log(event);\n    setSigns(event.target.checked);\n\n  }\n\n  const handleUnpackChange = () => event => {\n    console.log(event);\n    setUnpack(event.target.checked);\n\n  }\n\n  const handleHelperChange = () => event => {\n    console.log(event);\n    setHelper(event.target.checked);\n\n  }\n\n  const onDragEnd = result => {\n    document.body.style.color = \"inherit\";\n    document.body.style.backgroundColor = \"inherit\";\n    const { destination, source } = result;\n\n    if (!destination) {\n      return;\n    }\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n    const newLhsCards = displayExpression(equation.lhs, \"lhs\", signs, unpack, helper);\n    const newRhsCards = displayExpression(equation.rhs, \"rhs\", signs, unpack, helper);\n    if (destination.droppableId !== source.droppableId) {\n      var movedTask = \"\";\n      const lhsOrigin = source.droppableId === \"eqspace-lhs\";\n      const rhsOrigin = source.droppableId === \"eqspace-rhs\";\n      if (destination.droppableId === \"eqspace-rhs\") {\n        movedTask = newLhsCards[source.index];\n      } else {\n        movedTask = newRhsCards[source.index];\n      }\n      const newLhs = equation.lhs.subtract(movedTask.exp, lhsOrigin);\n      const newRhs = equation.rhs.subtract(movedTask.exp, rhsOrigin);\n      var newExp = new algebra.Equation(newLhs, newRhs);\n      setEquation(newExp);\n    }\n  };\n\n  const combineEquation = side =>{\n      var lhs = null;\n      var rhs = null;\n      if (side === \"rhs\"){\n          rhs = equation.rhs.simplify();\n          lhs = equation.lhs;\n            \n      } else {\n        rhs = equation.rhs\n        lhs = equation.lhs.simplify();\n      }\n      var newExp = new algebra.Equation(lhs, rhs);\n      setEquation(newExp);\n  }\n\n//   const unpackEquation = side =>{\n//     var lhs = null;\n//     var rhs = null;\n//     if (side === \"rhs\"){\n//         rhs = equation.rhs.simplify();\n//         lhs = equation.lhs;\n          \n//     } else {\n//       rhs = equation.rhs\n//       lhs = equation.lhs.simplify();\n//     }\n//     var newExp = new algebra.Equation(lhs, rhs);\n//     setEquation(newExp);\n// }\n\n  return (\n    <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n      <Grid container item direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <Grid container item direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <FormGroup>\n      <FormControlLabel\n        control={\n          <Switch\n            checked={helper}\n            onChange={handleHelperChange()}\n            value=\"helper\"\n            color=\"primary\"\n          />\n        }\n        label=\"Helper Mode\"\n      />\n      <FormControlLabel\n        control={\n          <Switch\n            checked={signs}\n            onChange={handleSignChange()}\n            value=\"signs\"\n            color=\"primary\"\n            disabled={!helper}\n          />\n        }\n        label=\"Show Signs\"\n      />\n      <FormControlLabel\n        control={\n          <Switch\n            checked={unpack}\n            onChange={handleUnpackChange()}\n            value=\"unpack\"\n            color=\"primary\"\n            disabled={!helper}\n          />\n        }\n        label=\"Unpack Variable\"\n      />\n\n      </FormGroup>\n        </Grid>\n      \n        <DragDropContext\n          onDragEnd={onDragEnd}\n          // onDragStart={this.onDragStart}\n          // onDragUpdate={this.onDragUpdate}\n        >\n          <EquationSpace\n            dropId={\"eqspace-lhs\"}\n            expression={equation.lhs}\n            side={\"lhs\"}\n            helper={helper}\n            showSigns={signs}\n            unpackEq={unpack}\n          />\n          <Equal />\n          <EquationSpace\n            dropId={\"eqspace-rhs\"}\n            expression={equation.rhs}\n            side={\"rhs\"}\n            helper={helper}\n            showSigns={signs}\n            unpackEq={unpack}\n          />\n        </DragDropContext>\n      </Grid>\n      <Grid style={{padding:20}} container item direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <Grid container item xs={6} direction=\"row\" justify=\"center\" alignItems=\"center\" >\n          <Button disabled={canCombine(equation.lhs)} onClick={() => combineEquation('lhs')} variant=\"contained\" color=\"primary\">\n            Combine\n          </Button>\n        </Grid>\n        <Grid container item direction=\"row\"  xs={6} justify=\"center\" alignItems=\"center\">\n          <Button  onClick={() => combineEquation('rhs')} variant=\"contained\" color=\"primary\" disabled={canCombine(equation.rhs)}>\n            Combine\n          </Button>\n        </Grid>\n      </Grid>\n      {/* <Grid style={{padding:20}} container item direction=\"row\" justify=\"center\" alignItems=\"center\"> */}\n        {/* <Grid container item xs={6} direction=\"row\" justify=\"center\" alignItems=\"center\" >\n          <Button disabled={!helper} onClick={() => unpackEquation('lhs')} variant=\"contained\" color=\"primary\">\n            Unpack\n          </Button>\n        </Grid>\n        <Grid container item direction=\"row\"  xs={6} justify=\"center\" alignItems=\"center\">\n          <Button  onClick={() => unpackEquation('rhs')} variant=\"contained\" color=\"primary\" disabled={!helper}>\n            Unpack\n          </Button>\n        </Grid>\n      </Grid> */}\n    </Grid>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport './index.css';\nimport EqDisplay from './EqDisplay';\n\n\nexport default function App(props) {\n\n  return (\n    // <Router>\n      <BrowserRouter basename={window.location.pathname || ''}>\n        <Route exact path=\"/\" component={EqDisplay} />\n      </BrowserRouter>\n    // </Router>\n  )\n\n}"],"sourceRoot":""}