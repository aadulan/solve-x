{"version":3,"sources":["serviceWorker.js","inital-data.js","Styles.js","EqCard.jsx","DisplayExpression.js","EqSpace.jsx","Equal.jsx","NewCalculator.jsx","Snackbar.jsx","EqDisplay.js","index.js","App.js"],"names":["Boolean","window","location","hostname","match","equationGen","randomNumber","Math","ceil","random","square","randomInput","input","useStyles","makeStyles","card","border","borderStyle","padding","margin","minwidth","userSelect","eqSpaceCard","maxWidth","borderWidth","backgroundColor","drop","display","flexDirection","equal","borderRadius","width","height","fontFamily","EqCard","props","classes","draggableId","task","id","index","isDragDisabled","provided","snapshot","Card","className","draggableProps","dragHandleProps","innerRef","CardContent","Typography","color","align","variant","math","content","floor","require","abs","displayExpression","expression","side","isShowSign","isUnpack","isHelper","tasks","factors","terms","forEach","t","fac","calculateFactors","coefficients","numer","concat","isStart","isPositive","coeff","unpack","variables","variable","contentHelper","content_NonHelper","helper","push","exp","constants","c","hasTerm","length","Array","from","Set","integer","inte","quotient","i","EquationSpace","useState","dragDisabled","setDragDisabled","useEffect","droppableId","dropId","direction","Grid","container","item","justify","alignItems","droppableProps","showSigns","unpackEq","map","key","placeholder","Equal","style","Calculator","number","setNumber","sign","setSign","addNumber","e","addSign","CardHeader","title","ButtonGroup","fullWidth","size","Button","onClick","value","newSign","onCalChange","onEnterChange","calculateExpression","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","useStyles1","theme","green","palette","dark","primary","main","amber","icon","fontSize","iconVariant","opacity","marginRight","spacing","message","MySnackbarContentWrapper","onClose","other","Icon","SnackbarContent","clsx","aria-describedby","action","IconButton","aria-label","CustomizedSnackbars","handleClose","event","reason","onOpenChange","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","EqDisplay","algebra","parse","equation","setEquation","setHelper","signs","setSigns","setUnpack","calculator","setCalculator","enter","setEnter","setOpen","setMessage","setVariant","finish","setFinish","rhs","console","log","solveFor","lhs","Number","includes","multiply","simplify","add","subtract","divide","newExp","Equation","canCombine","hasOneConstant","combineEquation","FormGroup","FormControlLabel","control","Switch","checked","onChange","target","label","disabled","xs","onDragEnd","result","document","body","destination","source","newLhsCards","newRhsCards","movedTask","lhsOrigin","rhsOrigin","newLhs","newRhs","a","b","answer","ReactDOM","render","basename","pathname","exact","path","component","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cba5d693.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initalData = {\n    equation : '2 * x - 5 = 5',\n    // tasks: [\n    //     { id: 'task-2', content: '2 * x' },\n    //     { id: 'task-4', content: '- 5' },\n    //     { id: 'task-5', content: '=' },\n    //     { id: 'task-6', content: '5' },\n    // ],\n};\n\nexport default initalData;\n\nexport const equationGen = () => {\n    const randomNumber = Math.ceil(Math.random() * 10) \n    const square = randomNumber * randomNumber\n    const randomInput = Math.ceil(Math.random() * 10)\n    const input = square - randomInput\n\n    return `${randomNumber} * x -${input} = ${randomInput}`\n\n}\n\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles({\n    card: {\n        border: 1, \n        borderStyle: 'solid', \n        padding: 10, \n        margin: 10, \n        minwidth: 200,\n    },\n    userSelect: {\n        userSelect:'none'\n    },\n    eqSpaceCard: {\n        padding: 20, \n        maxWidth: 1000, \n        borderStyle: 'solid', \n        borderWidth: 1, \n        backgroundColor: '#e3f2fd',\n    },\n    drop: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    equal: {\n        borderRadius: '50em',\n        margin: '0.25em',\n        width: 100, \n        height: 100,\n        fontFamily: '\"Fira Code\"',\n        display: 'flex',\n        userSelect:'none'\n    }\n\n})","import React from 'react'\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent'\nimport { Typography } from '@material-ui/core';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { useStyles } from './Styles'\nimport 'katex/dist/katex.min.css';\nimport TeX from '@matejmazur/react-katex';\n\n// props.isDragging ? 'lightgreen : 'white'\n\n//isDragDisabled to allow to conditionally move items \n\nexport default function EqCard(props) {\n    const classes = useStyles();\n\n    return (\n        <Draggable\n            draggableId={props.task.id}\n            index={props.index}\n            isDragDisabled={props.isDragDisabled}\n        >\n            {(provided, snapshot) => (\n\n\n                <Card\n                    className={classes.card}\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    innerRef={provided.innerRef}\n                    // isDragging={snapshot.isDragging}\n                >\n                    <CardContent>\n                        <Typography \n                            className={classes.userSelect} \n                            color='primary' \n                            align='center' \n                            variant='h2'>\n                                <TeX math={`${props.task.content}`}/>\n                        </Typography>\n\n                    </CardContent>\n                </Card>\n\n            )}\n\n        </Draggable>\n\n    )\n}","var floor = require( 'math-floor' );\nvar abs = require( 'math-abs' );\n\nexport const displayExpression = (expression, side, isShowSign, isUnpack, isHelper) => {\n    var tasks = []\n    var factors = []\n    expression.terms.forEach((t,index) => {\n        var fac = calculateFactors(t.coefficients[0].numer)\n        factors = factors.concat(fac)\n        var isStart  = index === 0\n        var isPositive = t.coefficients[0] > 0\n        // var helper = isHelper ? coeff + t.variables[0].variable : coeff+ t.variables[0].variable :\n        \n        // checkss if coefficient is equal to one\n        var isOne = t.coefficients[0].numer === 1\n        // if coefficient is equal to one then don't show it in helper mode \n        var coeff = isOne ? \"\" : t.coefficients[0].numer\n       \n        // if unpack then add the \\times to the equation so they can see constant being times\n        var unpack = isUnpack ?  t.coefficients[0].numer + \"\\\\times \"   +  t.variables[0].variable : t.coefficients[0].numer +  t.variables[0].variable\n\n        // if show sign add the signs \n        var contentHelper = isShowSign &&  isPositive ? \"+\" + unpack : unpack \n\n        // if no helper mode then just add signs to second \n        var content_NonHelper = !isStart && isPositive ? \"+\" +  coeff + t.variables[0].variable : coeff+ t.variables[0].variable\n\n        // sets what the content looks like \n        var helper = isHelper ? contentHelper : content_NonHelper\n\n        tasks.push({\n            id: `${side}-variable-x${index}`, \n            // content:!isStart && isPositive ? \"+\" +  t.coefficients[0].numer + t.variables[0].variable : t.coefficients[0].numer + t.variables[0].variable,\n            // content:!isStart && isPositive ? \"+\" +  coeff + t.variables[0].variable : coeff+ t.variables[0].variable,  \n            content: helper,\n            exp: t \n        });  \n    }); \n\n        expression.constants.forEach((c,index) => {\n            var fac = calculateFactors(c.numer)\n            factors = factors.concat(fac)\n            var hasTerm = tasks.length !== 0  && index === 0\n            var isStart  = index === 0\n            var isPositive = c.numer > 0\n            // if helper mode add signs to everything \n            var contentHelper = isPositive ? \"+\" + c.numer : c.numer\n\n            // if not helper  then only show it at certain times \n            var content_NonHelper = isPositive && (!isStart || hasTerm) ? \"+\" + c.numer : c.numer\n\n            // set content of what it should look like \n            var helper = isShowSign && isHelper ? contentHelper : content_NonHelper\n            tasks.push({\n                id: `${side}-num-${index}`, \n                // content: (!isStart && isPositive) || (isStart && hasTerm && isPositive) ? \"+\" + c.numer : c.numer,\n                // content: isPositive && (!isStart || hasTerm) ? \"+\" + c.numer : c.numer,  \n                content: helper,\n                exp: c\n            });         \n\n        }); \n\n\n        factors = Array.from(new Set(factors))\n        // console.log(factors)\n\n        return [tasks, factors];\n        \n    }\n\nfunction calculateFactors(integer) {\n    var inte = abs(integer)\n    var factors = [],\n    quotient = 0;\n  \n    for(var i = 1; i <= inte; i++){\n      quotient = inte/i;\n  \n      if(quotient === floor(quotient)){\n        factors.push(i); \n      }\n    }\n    return factors;\n    \n}","import React, { useState, useEffect } from 'react';\nimport Card from '@material-ui/core/Card';\nimport { Grid } from '@material-ui/core';\nimport EqCard from './EqCard'\nimport { Droppable } from 'react-beautiful-dnd';\nimport { displayExpression } from './DisplayExpression'\nimport { useStyles } from './Styles'\n//list of components transition : background colour 0.2 sease\n// props.isDragging ? 'lightgreen : 'white'\n\nexport default function EquationSpace(props) {\n\n    const [dragDisabled, setDragDisabled] = useState(false)\n\n    const classes = useStyles();\n\n    useEffect(() => {\n        setDragDisabled(displayExpression(props.expression, props.side)[0].length === 1)\n    }, [props.expression, props.side])\n\n    return (\n        <Card \n        className={classes.eqSpaceCard}\n        >\n            <Droppable\n                droppableId={props.dropId}\n                direction=\"horizontal\"\n\n            >\n                {(provided, snapshot) => (\n                    <Grid\n                        className={classes.drop}\n                        direction=\"row\"\n                        container\n                        item\n                        justify=\"center\"\n                        alignItems=\"center\"\n                        innerRef={provided.innerRef}\n                        {...provided.droppableProps}\n                        // isDraggingOver={snapshot.isDraggingOver}\n                    >\n                        {displayExpression(props.expression, props.side, props.showSigns, props.unpackEq, props.helper)[0].map((task, index) => (\n                            <EqCard \n                                key={task.id} \n                                task={task} \n                                index={index} \n                                {...props} \n                                isDragDisabled={dragDisabled} \n                            />\n                        ))}\n                        {provided.placeholder}\n                    </Grid>\n                )}\n\n            </Droppable>\n        </Card>\n\n    )\n\n}\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { useStyles } from './Styles'\n// import Card from '@material-ui/core/Card';\nimport 'katex/dist/katex.min.css';\nimport TeX from '@matejmazur/react-katex';\n\nexport default function Equal(props){\n    \n    const classes = useStyles();\n\n    return(\n        <Typography className={classes.equal} variant='h1'>\n            {/* <Card className={classes.equal}> */}\n                <span style={{ margin: 'auto' }}>\n                    <TeX math=\"=\"/>\n                </span>\n            {/* </Card> */}\n        </Typography>\n\n    )\n}","import React, { useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { Grid, CardContent, Card, CardHeader } from '@material-ui/core';\nimport { Button, ButtonGroup } from \"@material-ui/core\";\n\n\n\nexport default function Calculator(props) {\n    const [number, setNumber] = useState(\"\")\n    const [sign, setSign] = useState(\"\")\n\n    // const [expression, setExpression] = useState(\"\")\n    // const [answer, setAnswer] = useState(\"\")\n\n    // const addElement = (e) => {\n    //     setExpression(expression.concat(e));\n    // }\n\n    const emptyText = () => {\n        // setExpression(\"\")\n        // // setAnswer(\"\")\n        setNumber(\"\")\n        setSign(\"\")\n    }\n\n    const addNumber = (e) => {\n        setNumber(number.concat(e));\n    }\n    \n    const addSign = (e) => {\n        setSign(e);\n    }\n\n    const calculateExpression = () => {\n        var newSign = \"\"\n        if (sign === \"÷\") {\n            newSign = \"divide\"\n\n        } else if (sign === \"×\"){\n            newSign = \"multiply\"\n        } else if (sign === \"+\" ){\n            newSign = \"add\"\n        } else if (sign === \"-\"){\n            newSign = \"subtract\"\n        }\n\n        props.onCalChange(newSign, number)\n        props.onEnterChange(true);\n    }\n\n    return (\n        <Card>\n            <CardHeader\n            title=\"Equation Changer\"\n            \n            />\n            <CardContent>\n\n                <Grid container direction='column' justify='center' align='center'>\n                    <Grid container direction='row'>\n                        <Card style={{ width: '100%' }}>\n                            <CardContent>\n                                <Typography variant=\"h6\">\n                                    {sign}{number}\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n\n                    <Grid container direction='row'>\n                        <ButtonGroup\n                            fullWidth={true}\n                            size=\"large\"\n                            color='primary'\n                        >\n                            <Button onClick={() => addNumber(\"7\")}>7</Button>\n                            <Button onClick={() => addNumber(\"8\")}>8</Button>\n                            <Button onClick={() => addNumber(\"9\")}>9</Button>\n                            <Button onClick={() => addSign(\"÷\")}> ÷ </Button>\n                        </ButtonGroup>\n                    </Grid>\n                    <Grid container direction='row'>\n                        <ButtonGroup\n                            fullWidth={true}\n                            size=\"large\"\n                            color='primary'\n                        >\n                            <Button onClick={() => addNumber(\"4\")}>4</Button>\n                            <Button onClick={() => addNumber(\"5\")}>5</Button>\n                            <Button onClick={() => addNumber(\"6\")}>6</Button>\n                            <Button onClick={() => addSign(\"×\")}>×</Button>\n                        </ButtonGroup>\n                    </Grid>\n                    <Grid container direction='row'>\n                        <ButtonGroup\n                            fullWidth={true}\n                            size=\"large\"\n                            color='primary'\n                        >\n                            <Button onClick={() => addNumber(\"1\")}>1</Button>\n                            <Button onClick={() => addNumber(\"2\")}>2</Button>\n                            <Button onClick={() => addNumber(\"3\")}>3</Button>\n                            <Button onClick={() => addSign(\"-\")}>-</Button>\n                        </ButtonGroup>\n                    </Grid>\n                    <Grid container direction='row'>\n                        {/* <div style={{ width:'25%' }}> </div> */}\n                        <ButtonGroup\n                            fullWidth={true}\n                            size=\"large\"\n                            color='primary'\n                        // style={{ width:'75%' }}\n                        >\n                            <Button onClick={() => emptyText()} >Clear</Button>\n                            <Button value=\"0\" onClick={() => addNumber(\"0\")}>0</Button>\n                            <Button value=\"+\" onClick={() => addSign(\"+\")}>+</Button>\n                        </ButtonGroup>\n\n                    </Grid>\n                    <Grid container direction='row'>\n                        <ButtonGroup\n                            fullWidth={true}\n                            size=\"large\"\n                            color='primary'\n                        >\n\n                            <Button onClick={() => calculateExpression()}>Enter</Button>\n                        </ButtonGroup>\n\n                    </Grid>\n                </Grid>\n            </CardContent>\n        </Card>\n    )\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { amber, green } from '@material-ui/core/colors';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n};\n\nconst useStyles1 = makeStyles(theme => ({\n  success: {\n    backgroundColor: green[600],\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  info: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  warning: {\n    backgroundColor: amber[700],\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1),\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n}));\n\nfunction MySnackbarContentWrapper(props) {\n  const classes = useStyles1();\n  const { className, message, onClose, variant, ...other } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={clsx(classes[variant], className)}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={onClose}>\n          <CloseIcon className={classes.icon} />\n        </IconButton>,\n      ]}\n      {...other}\n    />\n  );\n}\n\nMySnackbarContentWrapper.propTypes = {\n  className: PropTypes.string,\n  message: PropTypes.string,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired,\n};\n\n// const useStyles2 = makeStyles(theme => ({\n//   margin: {\n//     margin: theme.spacing(1),\n//   },\n// }));\n\nexport default function CustomizedSnackbars(props) {\n//   const [open, setOpen] = React.useState(false);\n\n//   const handleClick = () => {\n//     setOpen(true);\n//   };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    props.onOpenChange(false);\n    // setOpen(false);\n  };\n\n  return (\n    <div>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n        open={props.open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n      >\n        <MySnackbarContentWrapper\n          onClose={handleClose}\n          variant={props.variant}\n          message={props.message}\n        />\n      </Snackbar>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"./index.css\";\nimport { equationGen } from \"./inital-data\";\nimport EquationSpace from \"./EqSpace\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport Grid from \"@material-ui/core/Grid\";\nimport algebra from \"algebra.js\";\nimport { displayExpression } from \"./DisplayExpression\";\nimport Equal from \"./Equal\";\nimport { Button } from \"@material-ui/core\";\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Calculator from './NewCalculator'\nimport Snackbar from './Snackbar'\n\n\nexport default function EqDisplay(props) {\n  const [equation, setEquation] = useState(algebra.parse(equationGen()));\n  const [helper, setHelper] = useState(false);\n  const [signs, setSigns] = useState(false);\n  const [unpack, setUnpack] = useState(false);\n  const [calculator, setCalculator] = useState([])\n  const [enter, setEnter] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [variant, setVariant] = useState(\"info\");\n  const [finish, setFinish] = useState(false);\n\n  function changeAnswer(a,b) {\n    setCalculator([a,b]);\n  }\n\n  function changeEnter(){\n    setEnter(!enter)\n  }\n\n  function changeOpen(){\n    setOpen(!open)\n  }\n\n  if(equation.rhs.constants.length === 1){\n    console.log(equation.rhs.constants[0].numer)\n    console.log(equation.solveFor(\"x\").numer)\n    if(equation.rhs.constants[0].numer === equation.solveFor(\"x\").numer){\n      // console.log('boo')\n      // // setFinish(true)\n      // setMessage(\"You solved the equation!\")\n      // setVariant(\"sucess\")\n      // setOpen(true)\n      // setEquation(algebra.parse(equationGen()))\n      // setFinish(false)\n    } \n  } else if(equation.lhs.constants.length === 1){\n    if(equation.lhs.constants[0].numer === equation.solveFor(\"x\").numer){\n      // setMessage(\"You solved the equation!\")\n      // setVariant(\"sucess\")\n      // setOpen(true)\n      // setEquation(algebra.parse(equationGen()))\n      // setFinish(true)\n    } \n  }\n  // if( equation.rhs.constants[0].numer === equation.solveFor(\"x\") || equation.lhs.constants[0].numer === equation.solveFor(\"x\")){\n  //   setFinish(true)\n  // }\n\n\n  //   if(equation.lhs.constants.length === 1 && equation.lhs.terms.length === 0 && equation.rhs.terms.length === 1 && equation.rhs.constants.length ===0){\n  //     if(equation.rhs.terms[0].coefficients[0].numer === 1){\n  //       setFinish(true)\n  //     } else {\n  //       setFinish(false)\n  //     }\n  //   } else if(equation.lhs.constants.length === 0 && equation.lhs.terms.length === 1 && equation.rhs.terms.length === 0 && equation.rhs.constants.length === 1){\n  //     console.log(equation.lhs.terms[0])\n  //     if(equation.lhs.terms[0].coefficients[0].numer === 1){\n  //       setFinish(true)\n  //     } else {\n  //       setFinish(false)\n  //     }\n  //   }\n\n  if(finish){\n      setMessage(\"You solved the equation!\")\n      setVariant(\"sucess\")\n      setOpen(true)\n      setFinish(false)\n  }\n  \n\n  if(enter){\n    var lhs = null\n    var rhs = null\n    var factors = Array.from(new Set(displayExpression(equation.lhs)[1].concat(displayExpression(equation.rhs)[1])))\n    \n    if((calculator[0] === 'divide' || calculator[0] === 'multiply') && Number(calculator[1]) === 0){\n      setMessage(\"Cannot \".concat(calculator[0], \" by \" , \"0\"))\n      setVariant(\"error\")\n      setOpen(true)\n    }\n    else if (calculator[0] ==='divide' && !factors.includes(Number(calculator[1]))){\n      setMessage(\"Cannot \".concat(calculator[0], \" by \" , calculator[1]))\n      setVariant(\"warning\")\n      setOpen(true)\n    } else{\n      if(calculator[0] === 'multiply'){\n        lhs = equation.lhs.multiply(Number(calculator[1])).simplify()\n        rhs = equation.rhs.multiply(Number(calculator[1])).simplify()\n      } else if (calculator[0] === 'add'){\n        lhs = equation.lhs.add(Number(calculator[1]))\n        rhs = equation.rhs.add(Number(calculator[1]))\n      } else if (calculator[0] === 'subtract'){\n        lhs = equation.lhs.subtract(Number(calculator[1]))\n        rhs = equation.rhs.subtract(Number(calculator[1]))\n      }\n      else if (calculator[0] === 'divide'){\n        lhs = equation.lhs.divide(Number(calculator[1])).simplify()\n        rhs = equation.rhs.divide(Number(calculator[1])).simplify()\n      }\n      setMessage(\"\".concat(calculator[0], \" by \" , calculator[1]))\n      setVariant(\"info\")\n      setOpen(true)\n      var newExp = new algebra.Equation(lhs, rhs);\n      setEquation(newExp);\n      setCalculator([])\n      \n    }\n    \n    setEnter(false);\n\n    \n  }\n\n\n  // onDragStart = () => {\n  //     document.body.style.color = 'blue';\n  //     document.body.style.transition = 'background-color 0.2s ease'\n  // }\n\n  // onDragUpdate = update => {\n  //     const { destination } = update;\n  //     const opacity = destination ? destination.index / Object.keys(this.state.tasks).length : 0 ;\n  //     document.body.style.backgroundColor = `rgba(153, 141, 217, ${opacity})`;\n  // }\n\n  const canCombine = equation => {\n    // console.log(equation)\n    var hasOneTerm = null;\n    var hasOneConstant = null;\n    if(equation.constants.length === 1){\n      hasOneConstant = true;\n    } else {\n      hasOneConstant = false;\n    }\n    if (equation.terms.length === 1){\n      hasOneTerm = true;\n    }else {\n      hasOneTerm = false;\n    }\n\n    return hasOneTerm || hasOneConstant\n  }\n\n  const handleSignChange = () => event => {\n    // console.log(event);\n    setSigns(event.target.checked);\n\n  }\n\n  const handleUnpackChange = () => event => {\n    // console.log(event);\n    setUnpack(event.target.checked);\n\n  }\n\n  const handleHelperChange = () => event => {\n    // console.log(event);\n    setHelper(event.target.checked);\n\n  }\n\n  const onDragEnd = result => {\n    document.body.style.color = \"inherit\";\n    document.body.style.backgroundColor = \"inherit\";\n    const { destination, source } = result;\n\n    if (!destination) {\n      return;\n    }\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n    const newLhsCards = displayExpression(equation.lhs, \"lhs\", signs, unpack, helper)[0];\n    const newRhsCards = displayExpression(equation.rhs, \"rhs\", signs, unpack, helper)[0];\n    if (destination.droppableId !== source.droppableId) {\n      var movedTask = \"\";\n      const lhsOrigin = source.droppableId === \"eqspace-lhs\";\n      const rhsOrigin = source.droppableId === \"eqspace-rhs\";\n      if (destination.droppableId === \"eqspace-rhs\") {\n        movedTask = newLhsCards[source.index];\n      } else {\n        movedTask = newRhsCards[source.index];\n      }\n      const newLhs = equation.lhs.subtract(movedTask.exp, lhsOrigin);\n      const newRhs = equation.rhs.subtract(movedTask.exp, rhsOrigin);\n      var newExp = new algebra.Equation(newLhs, newRhs);\n      setEquation(newExp);\n    }\n  };\n\n  const combineEquation = side =>{\n      var lhs = null;\n      var rhs = null;\n      if (side === \"rhs\"){\n          rhs = equation.rhs.simplify();\n          lhs = equation.lhs;\n            \n      } else {\n        rhs = equation.rhs\n        lhs = equation.lhs.simplify();\n      }\n      var newExp = new algebra.Equation(lhs, rhs);\n      setEquation(newExp);\n  }\n\n  return (\n    <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n      <Snackbar message={message} variant={variant} open={open} onOpenChange={changeOpen}/>\n      <Grid container item direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <Grid container item direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <FormGroup>\n      <FormControlLabel\n        control={\n          <Switch\n            checked={helper}\n            onChange={handleHelperChange()}\n            value=\"helper\"\n            color=\"primary\"\n          />\n        }\n        label=\"Helper Mode\"\n      />\n      <FormControlLabel\n        control={\n          <Switch\n            checked={signs}\n            onChange={handleSignChange()}\n            value=\"signs\"\n            color=\"primary\"\n            disabled={!helper}\n          />\n        }\n        label=\"Show Signs\"\n      />\n      <FormControlLabel\n        control={\n          <Switch\n            checked={unpack}\n            onChange={handleUnpackChange()}\n            value=\"unpack\"\n            color=\"primary\"\n            disabled={!helper}\n          />\n        }\n        label=\"Unpack Variable\"\n      />\n\n      </FormGroup>\n        </Grid>\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n          <Grid container item direction=\"row\" justify=\"center\" alignItems=\"center\" xs={9}>\n        <DragDropContext\n          onDragEnd={onDragEnd}\n          // onDragStart={this.onDragStart}\n          // onDragUpdate={this.onDragUpdate}\n        >\n          <EquationSpace\n            dropId={\"eqspace-lhs\"}\n            expression={equation.lhs}\n            side={\"lhs\"}\n            helper={helper}\n            showSigns={signs}\n            unpackEq={unpack}\n          />\n          <Equal />\n          <EquationSpace\n            dropId={\"eqspace-rhs\"}\n            expression={equation.rhs}\n            side={\"rhs\"}\n            helper={helper}\n            showSigns={signs}\n            unpackEq={unpack}\n          />\n        </DragDropContext>\n\n          </Grid>\n        <Grid container item direction=\"row\" justify=\"center\" alignItems=\"center\" xs={3}>\n          <Calculator onCalChange={changeAnswer} answer={calculator} enter={enter} onEnterChange={changeEnter} />\n        </Grid>\n\n        </Grid>\n      \n      </Grid>\n      <Grid style={{padding:20}} container item direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <Grid container item xs={6} direction=\"row\" justify=\"center\" alignItems=\"center\" >\n          <Button disabled={canCombine(equation.lhs)} onClick={() => combineEquation('lhs')} variant=\"contained\" color=\"primary\">\n            Combine\n          </Button>\n        </Grid>\n        <Grid container item direction=\"row\"  xs={6} justify=\"center\" alignItems=\"center\">\n          <Button  onClick={() => combineEquation('rhs')} variant=\"contained\" color=\"primary\" disabled={canCombine(equation.rhs)}>\n            Combine\n          </Button>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport './index.css';\nimport EqDisplay from './EqDisplay';\n\n\nexport default function App(props) {\n\n  return (\n    // <Router>\n      <BrowserRouter basename={window.location.pathname || ''}>\n        <Route exact path=\"/\" component={EqDisplay} />\n      </BrowserRouter>\n    // </Router>\n  )\n\n}"],"sourceRoot":""}